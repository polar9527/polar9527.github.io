<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Polar9527&#39; Blog</title>
    <link>https://polar9527.github.io/</link>
    <description>Recent content on Polar9527&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Jan 2021 21:38:52 +0800</lastBuildDate>
    
        <atom:link href="https://polar9527.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>书单</title>
      <link>https://polar9527.github.io/book-list/</link>
      <pubDate>Tue, 14 May 2019 17:38:58 +0800</pubDate>
      
      <guid>https://polar9527.github.io/book-list/</guid>
      
        <description>&lt;h1 id=&#34;mooc_list&#34;&gt;MOOC_list&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Introduction to Computer Science and Programming Using Python
&lt;ul&gt;
&lt;li&gt;Edx MITx - 6.00.1x 2015.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data Structures and Algorithm Design 数据结构与算法设计
&lt;ul&gt;
&lt;li&gt;Edx TsinghuaX - 30240184x 2016.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learning How to Learn
&lt;ul&gt;
&lt;li&gt;Coursera 2016.11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The Web Developer Bootcamp
&lt;ul&gt;
&lt;li&gt;Udemy 2018.7 - 2018.11.11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vue JS 2 - The Complete Guide
&lt;ul&gt;
&lt;li&gt;Udemy 2018.11.13 - 2018.11.25&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;reading_list&#34;&gt;Reading_list&lt;/h1&gt;
&lt;p&gt;IT 读书清单&lt;/p&gt;
&lt;h2 id=&#34;第一阶段&#34;&gt;第一阶段：&lt;/h2&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Python 基础教程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C Primer Plus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UNIX &amp;amp; Linux 编程实践&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;鸟哥的 Linux 私房菜：基础学习篇&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;鸟哥的 Linux 私房菜：服务器架设篇（部分）&lt;/li&gt;
&lt;li&gt;数据结构与算法分析：C 语言描述（部分）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据结构（C 语言版）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 必知必会&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 3 月 10 日-2015 年 3 月 17 日 一周&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++ Primer Plus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 3 月 27 日-2015 年 4 月 29 日 四周&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二阶段&#34;&gt;第二阶段&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第-1-部分已读&#34;&gt;第 1 部分（已读）：&lt;/h3&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;计算机系统概论（Yale N. Patt） 380&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 4 月 29 日-2015 年 5 月 17 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;深入理解计算机系统（CSAPP） 700&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 5 月 18 日-2015 年 6 月 22 日 五周&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机组成：结构化方法 500&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 6 月 30 日-2015 年 7 月 28 日 四周&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;del&gt;- 现代操作系统 550&lt;/del&gt;
&lt;del&gt;- 2015 年 6 月 23 日-2015 年 8 月 03 日 260 [暂停]&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络：自顶向下 500&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 8 月 07 日-2015 年 9 月 16 日 六周&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP/IP 网络编程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux 程序设计 700&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 10 月 03 日-2015 年 10 月 17 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剑指 offer 260&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 10 月 18 日-2016 年 01 月 24 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;廖雪峰 Python 教程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 01 月 21 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据结构（C++） 350&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2015 年 10 月 30 日-2016 年 03 月 07 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head First HTML 与 CSS 2nd 700&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 03 月 09 日 -2016 年 03 月 16 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图解 HTTP 250&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 03 月 17 日-2016 年 03 月 21 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;廖雪峰 JavaScript 教程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 03 月 22 日-2016 年 03 月 23 日 [95%]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Definitive Guide to Django&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 03 月 25 日-2016 年 06 月 14 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pro Git&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 04 月 23 日-2016 年 05 月 05 日 [暂停] 6.4 Managing an organization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head First HTML5 Programming 550&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 05 月 04 日-2016 年 05 月 09 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django by Example 450&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 04 月 27 日-2016 年 07 月 07 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Python 5th 1600&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 04 月 14 日-2016 年 09 月 08 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript DOM 编程艺术 280&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 09 月 27 日-2016 年 09 月 30 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis 入门指南 200&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 10 月 07 日-2016 年 10 月 08 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Programming Python 4th 1500&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 09 月 10 日-2016 年 12 月 12 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库系统概论 490/750&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2016 年 10 月 24 日-2017 年 03 月 07 日 [65%]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web scraping with Python 230&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 03 月 03 日-2017 年 03 月 15 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head First Java 675&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 03 月 23 日-2017 年 03 月 25 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head First 设计模式 630&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 03 月 19 日-2017 年 03 月 25 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Asynchronous Programming with Twisted 100&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 03 月 19 日-2017 年 03 月 29 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Scrapy 225&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 03 月 08 日-2017 年 03 月 31 日 [80%]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;汇编语言[王爽] 330&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 04 月 01 日-2017 年 04 月 03 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;x86 汇编语言-从实模式到保护模式 370&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 04 月 04 日-2017 年 04 月 14 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Orange&#39;s 一个操作系统的实现 300/470&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 04 月 20 日-2017 年 04 月 27 日 [60%]&lt;br&gt;
Orange&#39;s 一个操作系统的实现 470&lt;/li&gt;
&lt;li&gt;2017 年 08 月 11 日-2017 年 09 月 09 日 [100%]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP 权威指南 400/550&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 04 月 29 日-2017 年 05 月 04 日 [70%]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vagrant: Up and Running 150&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 05 月 20 日-2017 年 06 月 10 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 源码剖析 480&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 09 月 12 日-2017 年 09 月 29 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Web 开发：测试驱动方法 382 [60%]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 10 月 01 日-2018 年 01 月 07 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWK 程序设计语言 168 [36%]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 01 月 08 日-2018 年 01 月 15 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序员的自我修养 450 [80%]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 03 月 27 日-2018 年 04 月 12 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;鸟哥的 Linux 私房菜：服务器架设篇 [80%]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 11 月 01 日-2018 年 04 月 01 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux/UNIX 系统编程手册   1150&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2017 年 10 月 01 日-2018 年 05 月 14 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP/IP 详解 卷 1 核心部分 250/400&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 04 月 28 日-2018 年 06 月 07 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The TCP/IP Guide TCP/IP 相关部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 05 月 26 日-2018 年 06 月 07 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Go Programming Language 370&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 06 月 21 日-2018 年 07 月 01 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Docker Book 400&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 07 月 01 日-2018 年 07 月 15 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript 高级程序设计 720&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 09 月 03 日-2018 年 09 月 19 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java 核心技术 卷一 500&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 09 月 22 日-2018 年 10 月 05 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java 核心技术 卷二 400&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 10 月 06 日-2018 年 10 月 13 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head first Servlets &amp;amp; JSP 800&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 10 月 16 日-2018 年 10 月 30 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kubernetes in Action 560&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2018 年 12 月 01 日-2018 年 12 月 28 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring 实战 4th 577&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 01 月 09 日-2019 年 01 月 23 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring in Action 5th 485&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 01 月 16 日-2019 年 02 月 29 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 技术内幕 363/770&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 02 月 15 日-2019 年 03 月 11 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高性能 MySQL 214 + 213 = 427/800&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 02 月 15 日-2019 年 03 月 11 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PEP 3333 &amp;ndash; Python Web Server Gateway Interface v1.0.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 03 月 30 日-2019 年 04 月 10 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PEP 342 &amp;ndash; Coroutines via Enhanced Generators&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 03 月 30 日-2019 年 04 月 10 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flask Web 开发 233&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 04 月 08 日-2019 年 04 月 23 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go Web Programming 300&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 04 月 22 日-2019 年 04 月 27 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go 语言学习笔记 - 下册 200&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 04 月 28 日-2019 年 05 月 14 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unix 环境高级编程 - 600&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019年 08 月 01 日-2019 年 12 月 s24 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unix 网络编程 - 400&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2019 年 12 月 24 日-2020 年 01 月 20 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Concurrency in Go&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2020 年 06 月 01 日-2020 年 06 月 20 日&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://polar9527.github.io/about-en/</link>
      <pubDate>Fri, 22 Jan 2021 21:38:52 +0800</pubDate>
      
      <guid>https://polar9527.github.io/about-en/</guid>
      
        <description>&lt;h2 id=&#34;personal-information&#34;&gt;Personal Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;E-mail：polar9527@gmail.com&lt;/li&gt;
&lt;li&gt;GitHub：&lt;a href=&#34;https://github.com/polar9527&#34;&gt;https://github.com/polar9527&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Personal Home Page：&lt;a href=&#34;https://polar9527.github.io&#34;&gt;https://polar9527.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stack Overflow：&lt;a href=&#34;http://stackoverflow.com/users/6419115/polar9527&#34;&gt;http://stackoverflow.com/users/6419115/polar9527&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Douban：&lt;a href=&#34;https://book.douban.com/people/52877036/&#34;&gt;https://book.douban.com/people/52877036/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;skills&#34;&gt;Skills&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Familiar with Golang, understand Golang programming features, such as goroutine,channel, etc., read the source code of Golang Runtime partly, understand the concurrency mechanism of Golang&lt;/li&gt;
&lt;li&gt;Familiar with Docker and Kubernetes, understand the basic principle of Docker and Kubernetes, have experience in using Kubernetes&lt;/li&gt;
&lt;li&gt;Studied PBFT(Practical Byzantine Fault Tolerant Algorithm) and have a certain understanding of blockchain&lt;/li&gt;
&lt;li&gt;Can use the following languages: Python; Javascript; C/C++&lt;/li&gt;
&lt;li&gt;Familiar with Linux, AWS and other development environments&lt;/li&gt;
&lt;li&gt;Able to break through the limitation of high-level programming language level, understand the assembly under x86 platform, understand the C language system programming under UNIX /Linux environment&lt;/li&gt;
&lt;li&gt;Have a certain understanding of the operating system principle, currently studying the XV6 source code&lt;/li&gt;
&lt;li&gt;Have a complete knowledge system of Web front and back end, understand HTML/CSS/ JavaScript and other front-end knowledge, have experience in using VUE&lt;/li&gt;
&lt;li&gt;Skilled in using Git for version control&lt;/li&gt;
&lt;li&gt;Familiar with basic data structures and algorithms&lt;/li&gt;
&lt;li&gt;English CET-6, skilled in using Google/StackOverflow/Wikipedia, able to collect and research English technical materials from the source, and output English technical documents&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-experiences&#34;&gt;Project Experiences&lt;/h2&gt;
&lt;h3 id=&#34;opnenessopen-network-edge-service-software&#34;&gt;OpneNESS(Open Network Edge Service Software)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Jul. 2020 - Now&lt;/code&gt;&lt;br&gt;
OpenNESS is an open source edge application management system based on Kubernetes that enables service providers and enterprises to build, deploy and operate their own edge applications on the edge of any network, enabling easy migration of apps running on the Telco/Public Cloud to the edge.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Jul. 2020 -  - Aug. 2020&lt;/code&gt;  &lt;br&gt;
The development of unit tests for part of the core microservice components of OpenNESS, increased the code unit test coverage from about 50% to 100%,  the development language is Golang.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fix a bug introduced by project members via go.mod during development.&lt;/li&gt;
&lt;li&gt;The was introduced by me to cover code branches which the test framework could not test under the normal situation.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Sep. 2020 - Nov. 2020&lt;/code&gt;  &lt;br&gt;
Investigate the application of blockchain and TCF(Trusted Compute Service) projects in OpenNESS. The main work is the Avalon and Fabric ramp-up, which are the sub-project of Hyperledger, and investigation of the open source project Intel K8s Device Plugin and K8s Add-on NFD(Node Feature Discovery) which can support the deployment of Avalon in OpenNESS.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fabric (Golang) is an Enterprise-level Consortium blockchain project with access mechanism. Its core consensus component has been upgraded from the Kafka cluster to the Raft cluster which is a CFT(Crash Fault Tolerance) cluster and will continue to evolve into the PBFT(Practical Byzantine Fault Tolerance) cluster in the future to enhance the decentralized nature of its blockchain.&lt;/li&gt;
&lt;li&gt;Avalon (Python/C++) is a Trusted Compute Service (TCF) software framework that aims to provide off-chain trusted computing for blockchains, addressing pain points such as scalability and privacy while maintaining the security and resilience of transactions. It supports Trusted Execution Environment (TEE), Zero Knowledge Proofs (ZKP), and Multi-Party Compute (MPC).&lt;/li&gt;
&lt;li&gt;Intel K8S Device Plugin is mainly in the form of customized K8S system Pod controller, which adds the ability to discover worker node hardware feature to the K8S cluster, and has the features of operation and maintenance automation.&lt;/li&gt;
&lt;li&gt;NFD provides the K8S cluster with the ability to discover the hardware feature of worker nodes in the form of conventional deployment of K8S application Pod, but it also provides an extension interface, which can flexibly customize the strategy when discovering the hardware feature of worker nodes.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The general idea behind this application is that Fabric and Avalon which both are distributed computing platforms will be deployed by OpenNESS to show OpenNESS&#39;s ability to manage edge computing applications in blockchain and trusted computing scenarios. The blockchain scheme adopts Fabric and Avalon will be used to connect Fabric to do the off-chain computation. Meanwhile, TEE mode is adopted in the Avalon platform to provide trusted compute. TEE uses Intel SGX(Software Guard Extensions) instruction set Extensions and supporting Software, including SGX PSW(Platform Software), Intel K8S SGX Device Plugin, NFD and custom NFD SGX Extension.&lt;/p&gt;
&lt;p&gt;During investigation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I read the official documentation of Fabric and Avalon projects, understood the overall architecture of Fabric and Avalon, walk through the code of Avalon according to the business logic process, clarify myself about how the data is uploaded to blockchain and sent to Avalon for off-chain trusted computing.&lt;/li&gt;
&lt;li&gt;I built a complete set of hardware and software verification environment by deploying a Fabric cluster, and a Avalon platform base Intel SGX hardware, test and verify the whole process of trusted compute.&lt;/li&gt;
&lt;li&gt;I studied the official documentation of Intel SGX to understand the concept of SGX, and make knowledge reserve for the correct use of Intel K8S Device Plugin and NFD.&lt;/li&gt;
&lt;li&gt;I read Intel K8S Device Plugin SGX related part of the source code, as well as the source code of NFD, built a test environment, verify the feasibility of enabling SGX on OpenNESS.&lt;/li&gt;
&lt;li&gt;Two technical slides, about Avalon and SGX NFD , are exported, as well as several technical specification documents.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Nov. 2020 - now&lt;/code&gt; &lt;br&gt;
Participate in the integration development of EMCO (Edge Multi-Cluster Orchestrator) and OpenNESS to ensure the delivery of tasks at a critical time-point. EMCO is a software framework that provides multi-cluster cloud native application deployment capabilities, it is integrated into OpenNESS to enhance its edge deployment capabilities.&lt;/p&gt;
&lt;p&gt;Job content:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I complete the ramp-up of EMCO in several days, take over the existing work, clarify the development tasks, cooperate with foreign developers of EMCO project, and complete the development of Ansible script of OpenNESS automation integration tool.&lt;/li&gt;
&lt;li&gt;I coordinate with the integration developers of the other modules (Harbor and Smart City) involved in the EMCO integration effort to ensure that the task is progressing smoothly.&lt;/li&gt;
&lt;li&gt;I complete relevant automation scripts and output internal test manual documents, and assist the QA for validation.&lt;/li&gt;
&lt;li&gt;I resolve bugs reported by QA and other teams using this feature.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;xtar&#34;&gt;XTAR&lt;/h3&gt;
&lt;p&gt;Jul. 2019 - Dec. 2019
Decentralized trading system based on blockchain&lt;/p&gt;
&lt;h4 id=&#34;project-introduction&#34;&gt;Project introduction&lt;/h4&gt;
&lt;p&gt;XTAR is a decentralized value trading platform based on VRF(Verifiable Random Function Algorithm) and PBFT(Practical Byzantine Fault Tolerant Algorithm) to implement DPOS(Delegated Proof of Stance) mechanism. The unique two-stage consensus algorithm improves the block output speed of the whole system, and achieves on-chain governance through the native system contract to ensure the democratic fairness of the consensus.&lt;/p&gt;
&lt;h5 id=&#34;main-duties-and-responsibilities&#34;&gt;Main duties and responsibilities&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;XTAR Function reconstruction and performance optimization of the P2P network layer (P2P network layer)&lt;/li&gt;
&lt;li&gt;XTAR Cross review of the code&lt;/li&gt;
&lt;li&gt;XTAR System Bug check and repair&lt;/li&gt;
&lt;li&gt;XTAR Development of back-end services within the system ecosystem&lt;/li&gt;
&lt;li&gt;Based on XTAR system SDK system process testing and development&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;technical-details&#34;&gt;Technical details&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;The development language is &#39; Golang &#39;&lt;/li&gt;
&lt;li&gt;The third party library of network layer is &#39; libp2p &#39;&lt;/li&gt;
&lt;li&gt;The P2P network layer of the back-end service development system in the XTAR ecosystem was modified by me from a structured P2P network (implemented by Kademlia algorithm) to an unstructured P2P network to improve the node search performance.&lt;/li&gt;
&lt;li&gt;In XTAR system P2P layer node network quality management, using EWMA(exponential weighted moving average) record of Peer node RTT(round-trip Time, round-trip Time) statistics for the ranking of the current node&#39;s peer.&lt;/li&gt;
&lt;li&gt;The function of message limiting flow is implemented in the P2P layer of XTAR system to prevent the node crashing caused by message overload&lt;/li&gt;
&lt;li&gt;The coprogram pool is implemented in the P2P layer of XTAR system to reduce GC pressure and improve system performance&lt;/li&gt;
&lt;li&gt;Setup XTAR system Docker cluster development and debugging environment&lt;/li&gt;
&lt;li&gt;XTAR Native System Contract Test Process Development&lt;/li&gt;
&lt;li&gt;The development of XTAR system online IDE(integrated development environment) backend&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linkeychain-public-blockchain&#34;&gt;Linkeychain Public Blockchain&lt;/h3&gt;
&lt;p&gt;Jun. 2018 - Feb. 2019&lt;br&gt;
A public blockchain based on &amp;lsquo;DPOS&amp;rsquo;&lt;/p&gt;
&lt;h4 id=&#34;project-introduction-1&#34;&gt;Project introduction&lt;/h4&gt;
&lt;p&gt;Linkeychain is the second generation of blockchain system, which supports smart contracts and authorized equity proof mechanism DPOS, and provides underlying technical support for the company&#39;s commercial application of blockchain.&lt;/p&gt;
&lt;h5 id=&#34;main-duties-and-responsibilities-1&#34;&gt;Main duties and responsibilities&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Setup the underlying services based on blockchain&lt;/li&gt;
&lt;li&gt;Responsible for the construction and maintenance of &amp;lsquo;P2P&amp;rsquo; network layer of blockchain system&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;technical-details-1&#34;&gt;Technical details&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;The development language is &#39; Golang &#39;&lt;/li&gt;
&lt;li&gt;Refer to the open source project [Nebula] (&lt;a href=&#34;https://github.com/nebulasio/go-nebulas&#34;&gt;https://github.com/nebulasio/go-nebulas&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The development is based on the third party &amp;lsquo;P2P&amp;rsquo; network library &amp;lsquo;libP2P&amp;rsquo;, which provides the data structures and functions needed to develop &amp;lsquo;P2P&amp;rsquo; network services&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conspace-object-storage-system&#34;&gt;Conspace object storage system&lt;/h3&gt;
&lt;p&gt;May 2017 - Oct. 2017&lt;br&gt;
Object Storage System Based on &amp;lsquo;Ceph&amp;rsquo;&lt;/p&gt;
&lt;h4 id=&#34;project-introduction-2&#34;&gt;Project introduction&lt;/h4&gt;
&lt;p&gt;Conspace is a network disk system based on &amp;lsquo;Ceph&amp;rsquo;&lt;/p&gt;
&lt;h5 id=&#34;main-duties-and-responsibilities-2&#34;&gt;Main duties and responsibilities&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Setup and deployment of &amp;lsquo;Ceph&amp;rsquo; cluster in the development environment&lt;/li&gt;
&lt;li&gt;Setup and deployment of &amp;lsquo;Ceph&amp;rsquo; object storage system in the development environment&lt;/li&gt;
&lt;li&gt;Development of Django back-end based on the &amp;lsquo;Cech&amp;rsquo; object storage which provided &amp;lsquo;Amazon S3&amp;rsquo; compatible RESTful interface&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;technical-details-2&#34;&gt;Technical details&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;AWSv4 signature authentication of HTTP protocol layer, file manipulation function and user information management of object storage layer were completed by using Python third party libraries&amp;rsquo; Boto3 &amp;lsquo;and&amp;rsquo; Requests&amp;rsquo; on Amazon S3 compatible RESTful interface provided by &amp;lsquo;Cephs&amp;rsquo; object storage system&lt;/li&gt;
&lt;li&gt;Use &amp;lsquo;Django&amp;rsquo; to manage ConSpace objects to store system business data&lt;/li&gt;
&lt;li&gt;Use the &amp;lsquo;Django REST Framework&amp;rsquo; to provide &amp;lsquo;JSON&amp;rsquo; format data for the front end&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;work-experiences&#34;&gt;Work Experiences&lt;/h2&gt;
&lt;h3 id=&#34;cienet-technologies&#34;&gt;CIeNET Technologies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jul. 2020 - now&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;System integration software engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edge computing cloud platform software integration development&lt;/li&gt;
&lt;li&gt;Edge computing cloud platform application landing investigation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;shanghai-qiri-information-technology-co-ltd&#34;&gt;Shanghai Qiri information technology co., LTD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jul. 2019 - Jan. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Golang development engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blockchain system development&lt;/li&gt;
&lt;li&gt;Web backend development&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linkey-intelligent-technology-shanghai-co-ltd&#34;&gt;Linkey Intelligent Technology (Shanghai) Co., Ltd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jun. 2018 - Mar. 2019&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software Development Engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Investigate the blockchain protocol and operation mechanism&lt;/li&gt;
&lt;li&gt;Participate in base-level implementation and develop network application layer function&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;inner-mongolia-junzheng-internet-microfinance-co-ltd&#34;&gt;Inner Mongolia Junzheng Internet Microfinance Co. Ltd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nov. 2017 - May 2018&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python development engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Develop internal tools by shell and Python&lt;/li&gt;
&lt;li&gt;Manage services and applications on the AWS cloud platform,&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;shanghai-rongshu-information-technology-co-ltd&#34;&gt;Shanghai Rongshu Information Technology Co., Ltd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;May 2017 - Oct. 2017&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python backend development engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Investigation Ceph (An open source distributed file system)&lt;/li&gt;
&lt;li&gt;Development of the document management system based on Django through the object storage interface of Ceph&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;avic-huadong-optoelectronics-shanghai-co-ltd&#34;&gt;AVIC Huadong Optoelectronics (Shanghai) Co., Ltd&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mar. 2012 - Sep. 2013&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FPGA engineer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Participated in the preliminary technical investigation of the project, responsible for the encoding and testing of the FPGA communication interface protocol in the hardware system&lt;/li&gt;
&lt;li&gt;Designed the external driver circuit module of a device based on FPGA, and developed the transformation function between UART protocol and I2C protocol, make sure the hardware system can communicate with the I2C bus interface device through this module.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;education&#34;&gt;Education&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Huazhong University of Science and Technology，&lt;strong&gt;Software Engineering (Master)&lt;/strong&gt; 2009 - 2012&lt;/li&gt;
&lt;li&gt;Wuhan University of Technology，&lt;strong&gt;Electronic Information Engineering (Bach.)&lt;/strong&gt; 2004 - 2008&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://polar9527.github.io/about/</link>
      <pubDate>Fri, 22 Jan 2021 21:38:52 +0800</pubDate>
      
      <guid>https://polar9527.github.io/about/</guid>
      
        <description>&lt;h2 id=&#34;个人信息&#34;&gt;个人信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;邮箱：polar9527@gmail.com&lt;/li&gt;
&lt;li&gt;GitHub：&lt;a href=&#34;https://github.com/polar9527&#34;&gt;https://github.com/polar9527&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;个人主页：&lt;a href=&#34;https://polar9527.github.io&#34;&gt;https://polar9527.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stack Overflow：&lt;a href=&#34;http://stackoverflow.com/users/6419115/polar9527&#34;&gt;http://stackoverflow.com/users/6419115/polar9527&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;豆瓣：&lt;a href=&#34;https://book.douban.com/people/52877036/&#34;&gt;https://book.douban.com/people/52877036/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技能&#34;&gt;技能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;熟悉 Golang, 理解 Golang 编程特性，如 goroutine,channel 等，阅读过 Golang runtime 部分的源代码，理解 Golang 的并发机制&lt;/li&gt;
&lt;li&gt;熟悉 Docker、Kubenetes，理解 Docker 的基本原理，有 Kubenetes 的使用经验&lt;/li&gt;
&lt;li&gt;研究过 PBFT(实用拜占庭容错算法),对区块链有一定认识&lt;/li&gt;
&lt;li&gt;熟悉 Python&lt;/li&gt;
&lt;li&gt;熟悉 Linux、AWS 等开发环境&lt;/li&gt;
&lt;li&gt;能够突破高级编程语言层面的限制，了解 x86 平台下的汇编，了解 Unix/Linux 环境下下的 C 语言系统编程&lt;/li&gt;
&lt;li&gt;对操作系统原理有一定认识，目前正在研读xv6源代码&lt;/li&gt;
&lt;li&gt;有 Web 前后端完整的知识体系，了解 HTML/CSS/Javascript 等前端知识，有 Vue 的使用经验&lt;/li&gt;
&lt;li&gt;熟练使用 Git 进行版本控制&lt;/li&gt;
&lt;li&gt;熟悉基本的数据结构和算法&lt;/li&gt;
&lt;li&gt;英语水平 CET-6，熟练使用 Google/StackOverflow/Wikipedia, 能够从源头搜集研读英文技术资料，并输出英文技术文档&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目经验&#34;&gt;项目经验&lt;/h2&gt;
&lt;h3 id=&#34;opnenessopen-network-edge-service-software&#34;&gt;OpneNESS(Open Network Edge Service Software)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;2020 年 7 月 - 今&lt;/code&gt;&lt;br&gt;
OpneNESS是一个基于Kubernetes的开源边缘应用程序管理系统，使服务提供商和企业能够在任何网络的边缘上构建、部署和操作自己的边缘用用程序，支持通过简易的方式将运行在 Telco/Public Cloud 中的APP迁移到边缘。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;2020 年 7 月 - 2020 年 8 月&lt;/code&gt;  &lt;br&gt;
OpenNESS 部分核心微服务组件的单元测试的开发，将代码单元测试覆盖度提高到100%，开发语言为Golang。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在开n过程中测试并发现项目成员通过go.mod引入的bug。&lt;/li&gt;
&lt;li&gt;引入monkey patch 工具，将常规流程下测试框架无法测试覆盖的代码分支覆盖。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;2020 年 9 月 - 2020 年 11 月 &lt;/code&gt;  &lt;br&gt;
OpenNESS 应用落地预研，主要是 Hyperledger 开源项目下 Avalon 和 Fabric 这两个子项目的 Ramp-Up，以及支撑 Avalon 在 OpenNESS 中落地的 开源第三方 Intel K8s Device Plugin 和 K8s Add-on NFD(Node Feature Discovery) 的调研。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fabric (Golang) 是一个区块链领域里带有准入机制的企业级联盟链项目, 其核心共识组件已经由 Kafka消息队列集群 升级到 CFT(Crash Fault Tolerance) 的 Raft 集群，未来将继续进化到 PBFT(Practical Byzantine Fault Tolerance)集群 以便增强其区块链的去中心化属性。&lt;/li&gt;
&lt;li&gt;Avalon (Python/C++) 则是一个可信计算（TCF, Trusted Compute Service）框架，旨在为区块链提供链下可信计算,在取保交易的安全性和弹性的同时,解决可扩展性和隐私性等痛点。 支持授信执行环境（TEE，Trusted Execution Environment）、零知识证明（ZKP, Zero Knowledge Proofs）和多方计算（MPC, Multi-Party Compute）。&lt;/li&gt;
&lt;li&gt;Intel K8s Device Plugin 主要是以定制 K8s 系统Pod controller 的形式，给 K8s 集群增加 发现 worker node 硬件feature 的能力，有一定的运维自动化特点。&lt;/li&gt;
&lt;li&gt;NFD 则是通过常规的部署 K8s 应用Pod 的形式，给 K8s 集群 提供发现 worker node 硬件feature 的能力，但是提供扩展接口，能够灵活定制 发现 worker node 硬件feature 的时采用的策略。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个应用落地的大体构想是通过将将 Avalon 部署到 OpenNESS之上，展现 OpenNESS 在区块链和可信计算场景下的管理边缘计算应用的能力。区块链的方案采用Fabric, 用 Avalon 对接 Fabric 处理链下数据，同时在 Avalon 端采用 TEE 模式提供可信计算，TEE 具体采用 Intel SGX(Software Guard Extensions)指令集扩展以及相关支撑软件,包括SGX PSW(Platform Software)、Intel K8s SGX Device Plugin 以及 NFD 和 定制的 NFD SGX 扩展插件, 而又因为Fabric 以及 Avalon 都是分布式计算平台，通过两者结合并利用OpenNESS做边缘部署以及管理，从而展现 OpenNESS 在区块链和可信计算场景下的能力。&lt;/p&gt;
&lt;p&gt;在预研过程中：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;研读 Fabric 和 Avalon 项目官方文档，了解 Fabric 和 Avalon 整体架构，根据业务逻辑流程走读了 Avalon 的代码，了解待计算数据上链并通过 Avalon 做链下计算的流程。&lt;/li&gt;
&lt;li&gt;部署 Fabric 测试集群，部署 Avalon, 基于Intel SGX 硬件平台，搭建了一套完整的软硬件验证环境，测试验证了整个可信计算的流程。&lt;/li&gt;
&lt;li&gt;研读 Intel SGX 官方文档，了解 SGX 概念，为正确使用 Intel K8s Device Plugin 以及 NFD 做知识储备。&lt;/li&gt;
&lt;li&gt;研读 Intel K8s Device Plugin 的SGX相关部分源代码，以及 NFD 的源代码，搭建测试环境，部署评估两者在 OpenNESS 上使能 SGX 的可行性。&lt;/li&gt;
&lt;li&gt;输出了 Avalon Ranmp-up 和 SGX NFD 两份技术slide，以及若干技术说明文档。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;2020 年 11 月 - 今&lt;/code&gt; &lt;br&gt;
参与 EMCO（Edge Multi-Cluster OrChestrator）与 OpneNESS 的集成开发，保证任务在关键时间节点正常交付。EMCO 是一个提供多集群云原生应用部署功能的软件框架，集成到OpneNESS中是为了增强其边缘部署能力。&lt;/p&gt;
&lt;p&gt;工作内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;迅速完成 EMCO 的 Ramp-Up, 接手已有的工作，理清开发任务，与EMCO项目国外的开发人员协作，完成 OpenNESS 自动化集成工具的 ansible 脚本开发。&lt;/li&gt;
&lt;li&gt;协调EMCO集成工作中涉及的其他模块(Harbor 和 Smart City)集成开发人员的工作，确保任务顺利推进。&lt;/li&gt;
&lt;li&gt;完成相关自动化脚本以及输出内部测试文档，并协助测试人员工作。&lt;/li&gt;
&lt;li&gt;解决测试人员和组外人员使用集成工具时上报的Bug。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;xtar&#34;&gt;XTAR&lt;/h3&gt;
&lt;p&gt;2019 年 7 月 - 2019 年 12 月&lt;br&gt;
基于区块链的去中心化的交易系统&lt;/p&gt;
&lt;h4 id=&#34;项目简介&#34;&gt;项目简介&lt;/h4&gt;
&lt;p&gt;XTAR 是以 VRF(可验证随机函数算法)和 PBFT(实用拜占庭容错算法)为基础来实现 DPOS(Delegated Proof of Stake，委任权益证明)机制的去中心化价值交易平台。独有的两阶段共识算法，提高了整个系统的区块出块速度，并通过 native 系统合约实现了链上治理，保证了共识的民主公平。&lt;/p&gt;
&lt;h5 id=&#34;主要职责&#34;&gt;主要职责&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;XTAR 系统对等网络层(P2P 网络层)的功能重构和性能优化&lt;/li&gt;
&lt;li&gt;XTAR 底层代码的交叉 review&lt;/li&gt;
&lt;li&gt;XTAR 系统 Bug 排查修复&lt;/li&gt;
&lt;li&gt;XTAR 系统生态圈内后端服务的开发&lt;/li&gt;
&lt;li&gt;基于 XTAR 系统 SDK 的系统流程测试开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;技术细节&#34;&gt;技术细节&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;开发语言为&lt;code&gt;Golang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;网络层第三方库为&lt;code&gt;libp2p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将 XTAR 系统生态圈内后端服务的开发系统 P2P 网络层由结构化 P2P 网络(采用 Kademlia 算法实现)修改为无结构化 P2P 网络以提高网络中节点查找性能&lt;/li&gt;
&lt;li&gt;在 XTAR 系统 P2P 层进行节点网络质量管理，利用 EWMA(指数加权移动平均法)记录的 Peer 节点的 RTT(Round-Trip Time,往返时延)的统计值，对当前节点的 Peer 做排名&lt;/li&gt;
&lt;li&gt;在 XTAR 系统 P2P 层实现消息限流功能，预防消息过载导致的节点崩溃&lt;/li&gt;
&lt;li&gt;在 XTAR 系统 P2P 层实现协程池，以降低 GC 压力提升系统性能&lt;/li&gt;
&lt;li&gt;搭建 XTAR 系统 docker 集群的开发调试的环境&lt;/li&gt;
&lt;li&gt;XTAR 系统 native 系统合约测试流程开发&lt;/li&gt;
&lt;li&gt;XTAR 系统在线 IDE(集成开发环境)后端部分的开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linkeychain-公链系统&#34;&gt;Linkeychain 公链系统&lt;/h3&gt;
&lt;p&gt;2018 年 6 月 - 2019 年 2 月&lt;br&gt;
基于&lt;code&gt;DPOS&lt;/code&gt;的区块链公链&lt;/p&gt;
&lt;h4 id=&#34;项目简介-1&#34;&gt;项目简介&lt;/h4&gt;
&lt;p&gt;Linkeychain 是第二代区块链系统，支持智能合约，&lt;code&gt;授权股权证明机制 DPOS&lt;/code&gt;，为公司的区块链商业应用提供底层技术支撑。&lt;/p&gt;
&lt;h5 id=&#34;主要职责-1&#34;&gt;主要职责&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;搭建基于区块链的底层服务&lt;/li&gt;
&lt;li&gt;负责公链系统的&lt;code&gt;p2p&lt;/code&gt;网络层的搭建和维护&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;技术细节-1&#34;&gt;技术细节&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;开发语言为&lt;code&gt;Golang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参考开源项目&lt;a href=&#34;https://github.com/nebulasio/go-nebulas&#34;&gt;星云链&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基于第三方&lt;code&gt;p2p&lt;/code&gt;网络库&lt;code&gt;libp2p&lt;/code&gt;做的开发，该第三方的库提供了开发&lt;code&gt;p2p&lt;/code&gt;网络服务所需的数据结构和函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conspace-对象存储系统&#34;&gt;ConSpace 对象存储系统&lt;/h3&gt;
&lt;p&gt;2017 年 5 月 - 2017 年 10 月&lt;br&gt;
基于&lt;code&gt;Ceph&lt;/code&gt;的对象存储系统&lt;/p&gt;
&lt;h4 id=&#34;项目简介-2&#34;&gt;项目简介&lt;/h4&gt;
&lt;p&gt;ConSpace 一个基于&lt;code&gt;Ceph&lt;/code&gt;的网盘系统&lt;/p&gt;
&lt;h5 id=&#34;主要职责-2&#34;&gt;主要职责&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;开发环境中&lt;code&gt;Ceph&lt;/code&gt;集群的搭建部署&lt;/li&gt;
&lt;li&gt;开发环境中&lt;code&gt;Ceph&lt;/code&gt;对象存储系统的搭建部署&lt;/li&gt;
&lt;li&gt;基于&lt;code&gt;Ceph&lt;/code&gt;对象存储提供的&lt;code&gt;Amazon S3&lt;/code&gt;兼容的 RESTful 接口开发&lt;code&gt;Django&lt;/code&gt;后端逻辑&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;技术细节-2&#34;&gt;技术细节&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;采用了 Python 第三方库&lt;code&gt;boto3&lt;/code&gt;和&lt;code&gt;requests&lt;/code&gt;，在&lt;code&gt;Ceph&lt;/code&gt;对象存储系统提供的与 Amazon S3 兼容的 RESTful 接口上，完成了 Http 协议层的 AWSv4 签名认证，以及与对象存储相关的文件操作功能和对象存储层用户信息的管理&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;Django&lt;/code&gt;管理 ConSpace 对象存储系统业务层数据&lt;/li&gt;
&lt;li&gt;前后端分离，&lt;code&gt;Django&lt;/code&gt;逻辑层采用&lt;code&gt;Django REST framework&lt;/code&gt;为前端提供&lt;code&gt;json&lt;/code&gt;格式数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工作经历&#34;&gt;工作经历&lt;/h2&gt;
&lt;h3 id=&#34;瞬联软件科技北京有限公司上海分公司&#34;&gt;瞬联软件科技（北京）有限公司上海分公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2020 年 7 月 - 今&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统集成软件工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边缘计算云平台软件集成开发&lt;/li&gt;
&lt;li&gt;边缘计算云平台应用落地预研&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;上海启日信息技术有限公司&#34;&gt;上海启日信息技术有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2019 年 7 月 - 2020 年 1 月&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Golang 开发工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;区块链底层功能开发&lt;/li&gt;
&lt;li&gt;服务器后端开发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;链极智能科技上海有限公司&#34;&gt;链极智能科技（上海）有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2018 年 6 月 - 2019 年 3 月&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件开发工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;研究区块链协议及运行机制&lt;/li&gt;
&lt;li&gt;参与底层实现，并编写网络应用层代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;内蒙古君正互联网小额贷款有限公司&#34;&gt;内蒙古君正互联网小额贷款有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017 年 11 月 - 2018 年 5 月&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 开发工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 shell，python 编写公司内部工具，并进行维护&lt;/li&gt;
&lt;li&gt;在 AWS 云平台上管理服务器和应用，编写运维相关的文档、手册、流程，制定安全、备份、统计策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;上海容数信息科技有限公司&#34;&gt;上海容数信息科技有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017 年 5 月 - 2017 年 10 月&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 后端开发工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习研究 Ceph（一种开源分布式文件系统）&lt;/li&gt;
&lt;li&gt;通过 Ceph 的对象存储接口，基于 Django 开发文档内容管理系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;中航华东光电上海有限公司&#34;&gt;中航华东光电(上海)有限公司&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2012 年 3 月 - 2013 年 9 月&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FPGA 工程师&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参与项目前期技术调研，负责硬件系统中 FPGA 部分通信接口协议的编码、测试工作&lt;/li&gt;
&lt;li&gt;设计了基于 FPGA 的某型设备外部驱动电路模块，实现了 UART 通信协议到 I2C 通信协议解析转换功能，使硬件系统能够通过该模块和 I2C 总线接口器件进行数据通讯。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;教育经历&#34;&gt;教育经历&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;华中科技大学，&lt;strong&gt;软件工程（硕士）&lt;/strong&gt; 2012 年毕业&lt;/li&gt;
&lt;li&gt;武汉理工大学，&lt;strong&gt;电子信息工程（本科）&lt;/strong&gt; 2008 年毕业&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Posts</title>
      <link>https://polar9527.github.io/post/</link>
      <pubDate>Thu, 06 Jun 2019 11:27:15 +0800</pubDate>
      
      <guid>https://polar9527.github.io/post/</guid>
      
        <description></description>
      
    </item>
    
  </channel>
</rss>
